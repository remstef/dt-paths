######
##
# 1) start: docker-compose up -d bash
# 2) attach: docker attach ...
# 3) detach: detach with <CTRL-p> <CTRL-q>
# 4) stop: docker-compose down
##
######
version: '2.3'

networks:
  dtpaths:

volumes:
  node_modules:

services:

  ##
  # Main components and their dependencies
  ##

  # BEGIN: webapp server production
  node:
    image: node:14.14.0
    volumes:
      - ${PWD}/webapp:/opt/dt-paths/webapp
    ports:
      - 3000:3000
    networks:
      - dtpaths
    working_dir: /opt/dt-paths/webapp
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=production
  # END: webapp server

  # BEGIN: webapp server watch development. Connect with docker exec -ti .. bash and run npm run watch
  watch:
    image: node:14
    volumes:
      - ${PWD}/webapp:/opt/dt-paths/webapp
    ports:
      - 3000:3000
    networks:
      - dtpaths
    working_dir: /opt/dt-paths/webapp
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server in watch mode ...
        npm run watch
    environment:
      - NODE_ENV=development
  # END: webapp server watch development

  # BEGIN: webapp server bash development. Connect with 'docker exec -ti asentvis_bash_1 bash' and run 'npm run watch'
  bash:
    image: node:14
    volumes:
      - ${PWD}/webapp:/opt/dt-paths/webapp
    ports:
      - 3000:3000
      - 3001:3001
    networks:
      - dtpaths
    stdin_open: true
    tty: true
    working_dir: /opt/dt-paths/webapp
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo "node --inspect-brk=0.0.0.0:3001 app.js" >> /root/.bash_history
        echo "node --inspect=0.0.0.0:3001 app.js" >> /root/.bash_history
        echo "npm run watch" >> /root/.bash_history
        echo "node app.js" >> /root/.bash_history
        echo "npm start" >> /root/.bash_history
        bash
    environment:
      - NODE_ENV=development
      - LOGLEVEL=trace
      - LOGBUFFER=false
      - MYSQL_CONNECTIONSTRINGS=
        default=mysql://root:root@host.docker.internal:13306/DT_CC_depnemwe?debug=false&connectionLimit=150&multipleStatements=true
        nondefault=mysql://root:root@host.docker.internal:13306/DT_CC_depnemwe?debug=false&connectionLimit=150&multipleStatements=true
  # END: webapp server bash development

####################  ####################  ####################  ####################  ####################  ####################  ####################  ####################
####################  ####################  ####################  ####################  ####################  ####################  ####################  ####################
#########  ####################  ####################  ####################  ####################  ####################  ####################  ####################  #########
#########  ####################  ####################  ####################  ####################  ####################  ####################  ####################  #########
####################  ####################  ####################  ####################  ####################  ####################  ####################  ####################
####################  ####################  ####################  ####################  ####################  ####################  ####################  ####################
#########  ####################  ####################  ####################  ####################  ####################  ####################  ####################  #########
#########  ####################  ####################  ####################  ####################  ####################  ####################  ####################  #########
####################  ####################  ####################  ####################  ####################  ####################  ####################  ####################
####################  ####################  ####################  ####################  ####################  ####################  ####################  ####################
#########  ####################  ####################  ####################  ####################  ####################  ####################  ####################  #########
#########  ####################  ####################  ####################  ####################  ####################  ####################  ####################  #########

###
#
# SWAGGER DEPRECATED
#
###

  # BEGIN: webapp
  deprecated-swagger-dev:
    image: remstef/node-swagger:10
    volumes:
      - ${PWD}:/opt/dt-paths
    ports:
      - 11000:10010
      - 3000:3001
    networks:
      - dtpaths
    stdin_open: true
    tty: true
    working_dir: /opt/dt-paths
    entrypoint: bash
    environment:
      - NODE_ENV=development
      - WATCHIFYAPP=TRUE
      - COOKIE_SECRET=MY_COOKIE_SECRET
      - STORAGE=mysql
      - MYSQL=mysql://autolinks:autolinks1@mysql5:3306/autolinks?debug=false&connectionLimit=150&multipleStatements=true
      - LOGLEVEL=trace
      - LOGBUFFER=false
  # END: webapp
  
  # BEGIN: webapp
  deprecated-swagger-production:
    image: node:14.14
    volumes:
      - ${PWD}:/opt/dt-paths
    ports:
      - 20002:10010
    networks:
      - dtpaths
    working_dir: /opt/dt-paths
    restart: unless-stopped
    healthcheck:
      test: curl 0.0.0.0:10010/ping
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo installing modules ...
        npm install
        echo starting server ...
        npm start
    environment:
      - NODE_ENV=production
      - COOKIE_SECRET=hfiauhdfnaln
      - STORAGE=mysql
      - MYSQL=mysql://autolinks:autolinks1@mysql5:3306/autolinks?debug=false&connectionLimit=150&multipleStatements=true
      - LOGLEVEL=info
      - LOGBUFFER=false
      - WATCHIFYAPP=
  # END: webapp